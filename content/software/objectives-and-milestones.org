#+title: Objective and Milestones
#+date: 2020-04-05
#+description: Without Vision, The People Parish.
#+weight: 10
#+references[]: [The Lean Startup, The Agile Methodology, The Startup Owners Manual]


{{< youtube id="bQxqIKTO2Ck" autoplay="true" >}}

Watch from the begining of the speach from 0:17 seconds to the 42
second mark (or the whole thing it is great).

Thank You, Arnold! I could not have said it any better! 

* First Rule of Success ~ Have a Vision

Arnold says the **First Rule of Success** is to have a vision. I
totaly agree with that. I mean, how can you consider something a
success if you haven't defined what success is. 

As much as is true that a vision in life is essential to success, it
is equally true with /Software Projects/. 

Without a clearly articulated vision, equiped with measurable tasks
the project will devolve toward chaos. Unless they are able to huddle
around the game plan and apply their passion to the project like a
championship badmitten team.

** Whose Vision? Hint: Not yours! 

Ok we need a vision, but how do we come up with one? Brainstorming? Or
maybe, if we have a really creative team we'll do /agile/ and make it
up as we go! Since we don't want to stiffle creativity.

Yea, no. We're not doing any of that stuff.

The biggest mistake ever made since the caveman began programming
(besides not testing and accepting cavewomen programmers) is building
what YOU THINK the customer or user wants, with out the bother of
including the customer.

Get to know your customer.!. 

:BEGIN_QUOTE:
**Waste** is building something (or doing anything) that does not benefit
the customer. It is also 
:END:

** 4 Epiphanies + Agile = The Lean Start

Most people are aware of the basic concept of /The Lean Startup/
championed by Eric Ries after being forced to take a business class,
along with his business partner in order to aquire an additional round
of funding to keep their startup from folding.

The class was taught by Steven Blank at UC Berkeley Haas School of
Business was about to change the world. Or at least the infamous
/Silicon Valley/ startup scene.  

Dr. Blank had figured out the "formula" to success in the High Tech
World of Silicon Valley. 

Eric, a Software Engineer experienced the /Epiphanies/ with /Agile
Software Development/ and the valley has never been the same. 

The Lean Startup emerged, it is next to impossible to get funding in
the Valley within 10 short years after the Lean Start up. Without
going into to detail, we are entering this train **assuming** you have
done some 

** The Secret 

The Secret is, drum roll please...

To have your customers / owners so closely involved in the development
processes that you are building exactly what they tell you to build.
If you help them tell you what they really need, it is hard to mess
that up.






* Signs that a Change Needed

- Management by Crises
- No Clear, Reachable Objective Goals
- Milestones are not measurable (can be completed) or reasonable (can
  be done at all).
- Nobody /really/ understands the customers needs and wants
- The goals keep changing increasing confusion and waste
- Team leadership is not engaged with user before and during R&D

*** Reduce the Scope of the Project to something that can be finished.

Likewise, my life as a _Developer_ and _Project Manager_ has become
infinitely easier because I now focus my time, budget and resources on
fewer tasks that have a REALLY HIGH probability of getting done.

#+BEGIN_QUOTE:
And, the customer has something usable, sooner rather than later.
#+END_QUOTE:

Which means that It is also **MUCH EASIER** to ensure a **HIGH LEVEL**
of **Quality** when the feature scope has been minimized.

** Getting Our House In Order

I am going advocate the Kanban board to keep track of everything task
oriented. 

We are going to use the /principals/ of /Agile Development/, however
not, necessarily


** Reference Material
Next: [[/software/software-development-life-cycle][Software Development Life Cycle]]


