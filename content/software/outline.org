#+title: Predictable IoT Software Development
#+description: Do you ever stress over a software project, or lose sleep wondering how to start?
#+subtitle: Take control of your project
#+date: 2020-04-05

* Overview
+ Assumption: The customer is known
+ Assumption: The application has been vetted
- Make Software Development Predictable. We want to make the software
  development processes predictable, to remove the mysterious
  schedules and never ending drain to the budget. 
- Right size the process: Process is essential for success. Minimizing
  process is essential for effeciency.
- I want to document the things that make my life, as a developer
  easier and most important, help deliver what my customers want, on
  time and within bugdet. 
- I also want to **avoid** projects that suck or are inevetiably
  leading to disaster because of a lack of process and discipline.
- What to expect in the following software development process pages 

* Objective and Milestones
- Setting the Objective: Arnold video, why they are so important.
- Identify problems with existing project
-- Management by crisis
-- No Clear reachable objective and goals
-- Nobody understands what the client /really/ wants
-- goals keep changing
-- leadership disengaged.

- Deriving Milestones
- Reduce project scope to an MVP
- Acceptance Criteria
- Measuring Progress
- Getting Paid
- Kanban board and publishing task lists
- Use examples from Github and Trello

* Version Control
- Source of all Truth
- Syncronize all Team Members
- Versioning and Release Schedule
- Track all changes
- Revert to previous version of code
- Automation friendly for testing and releases
- Speak on git vs. github and other alternatives

[[https://www.atlassian.com/git/tutorials/what-is-version-control][Bitbucket Version Control article]]

* Testing
- If we do not test our software, our customer will
- Unit testing 
- Performance Tests
- Systems and Acceptance Testing
- Ensure our Customers are getting quality software

* Deliver and Deploy
- When fixes made how are they deployed
- Who thourough is testing before deploy
- Save deploy with A/B
- Automate the backend

* Customer Support & Feedback
- Customer help desk
- Take feedback always
- Ask customers directed questions

* Measure and Optimize
- Must measure to improve
- Are we spending too much money somewhere?
- Have we out grown our space?
- Are we wasting money?
- Are we loosing customers do to bottle necks?

* Call To Action

- Have them fill out a survey or join my youtube channel.
