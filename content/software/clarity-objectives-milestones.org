#+title: Getting Clearity with Objectives and Milestones
#+date: 2020-04-05
#+weight: 10

* How to Start

It is amazing how many complex and expensive software projects start
with nothing more than a /proof of concept/. 

** Objective

The first things above all is to state a clear, measurable
objective. It should go without saying, the objective must also be
reasonable. 

Believe it or not, I have seen people post (on Upwork) jobs asking to
create a /Facebook Like/ website for $500. Sheesh, I wonder if /Mark/
(Zuck to you outsiders...) knows he way over paid to build
/Facebook/.?. 

Back to the point.. By setting clear, measurable and realistic goals
does a /boat load/ of good things that we'll get into in bit, but one
of the most important things is:

> You position you and your team to succeed! 

*** TODO Keep the Objective Clearly Posted

This most likely seems like a trivial thing to do, Even a bit
managerial. However it can Save a tremendous amount of time and energy
Heading downTechnical rabbit trails And fixing weird bugs That may
have otherWise Been avoided altogether By selecting an alternative
solution By simply having the endgame in mind. 


*** Establish Communication Protocol
    
Communication should be:

1. easy for everybody
2. captured to context, history for example, to capture the rationale
   behind decisions that may have required a controversial
   trade-off. Invaluable for repeating the same convesation. 

   Also can be used to determine when old practices can be
   obsoleted. Technology has a way obliterating completely rational
   decision that were made a mere two years ago..
3. DO NOT Allow project communications To be spread amongst email,
   Texts, Social media accounts and various Other arbitrary Cyber
   nooks and crannies.

You will Lose all history and context. Debates and decisions Will be
unnecessarily repeated.

** Define a Minimum Viable Product (MVP)

Focus on building something usable at first. Forget all the features
And sexy designs, Just make sure you have something that's Necessary
and usable.

Easy and bug free always win over Doing sexy features.

Build something usable With the minimum features to have a happy
customer, With relatively bug free software. (Low tech debt).

Now start iterating on features.

** **Draft** Milestones and Tasks

Expect them to change /they will anyway/.

Milestone should each add something usable to the project. When
necessary, Milestones will be associated with deadlines and target
dates. 

Milestones are also good time For intermittent payment. 

Make An effort to improve Estimates and guesstimates. 

** Advanced Topic - Separate POC from Development

A POC is taking a conceptAnd demonstrating that it can actually be
done in hardware and/or software. And implementation is
takingApproving POC And turning it into something usable To somebody
other than the developer. 

Embrace this fact, And projecting software Development times and cost
Become much less mysterious. 

*** TODO Create an example PoC to Development

Was it Rodney Brooks that Said Plan on Throwing away your first
version. Because you will anyway.

I Believe the motive behind this was simplyThe fact that Software
development takes on to very different Trajectories Depending on
whether you are buildingA known entity, Or are exploringA new
development or concept.

The POC is really about Going from not knowing what you don't know,
Two knowing what you need To do. In the process of going from POC to
implementation Is identifying that what you do know And associating
that with Established industry patterns And best practices. 

To Basically starting a development job not knowingWhen if or
howYou're going to accomplish the desired goal.
** Communication Parity

The Ultimate goal here is communication parity. The two key factors to
communicating and keeping parity Is the clarity of communication,
Which should be reflected in the milestones and Tasks, In the captured
history. 

Best results happen when buy-in comes fromAll interested
parties. Owners, Stakeholders, Providers And even management. 

Communications should resemble a web vs. a tree, communications do not
need to Real-time in most cases. ButResponses absolutely need to
be Timely In order for the process to continue Finish on time. 
