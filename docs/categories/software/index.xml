<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Rusty Eddy</title>
    <link>http://www.rustyeddy.com/categories/software/</link>
    <description>Recent content in Software on Rusty Eddy</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 May 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://www.rustyeddy.com/categories/software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Red Eye Video Server</title>
      <link>http://www.rustyeddy.com/notes/redeye/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/redeye/</guid>
      <description>&lt;p&gt;The Red Eye project is a service definition rapper around inexpensive&#xA;cameras attached to inexpesive micro-controllers that take pretty good&#xA;video.&lt;/p&gt;&#xA;&lt;p&gt;The video streams are built using the GStreamer library. The camera&#xA;native capabilities are used to extract as high quailty, realtime&#xA;images possible.&lt;/p&gt;&#xA;&lt;p&gt;The video streams will be consumed by one or more sinks, including but&#xA;not limited to Files, cloud storage, High Def Display and Computer&#xA;Vision libraries.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Skid Steering</title>
      <link>http://www.rustyeddy.com/notes/skid-steering/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/skid-steering/</guid>
      <description>&lt;p&gt;Skid steering basics&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Based on &lt;em&gt;fixed direction wheels[1] or tracks&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;There are two &lt;em&gt;groups&lt;/em&gt; or &lt;em&gt;sides&lt;/em&gt; of wheels: left and right&lt;/li&gt;&#xA;&lt;li&gt;All wheels in a group MUST always point in the same direction&lt;/li&gt;&#xA;&lt;li&gt;All wheels in a group MUST always rotate at the same rate&lt;/li&gt;&#xA;&lt;li&gt;Direction is determined by the speed of the two wheel groups&#xA;&lt;ul&gt;&#xA;&lt;li&gt;To move straight all motors rotate at the same rate&lt;/li&gt;&#xA;&lt;li&gt;Forward and Reverse are determined by positive and negative values&lt;/li&gt;&#xA;&lt;li&gt;Turning is achieved by varying the throttle on the right and left&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;example&#34;&gt;Example&lt;/h3&gt;&#xA;&lt;p&gt;The &lt;code&gt;Skidder&lt;/code&gt; class has the following API, as you can see all of&#xA;the movements we desire can be accomplished with a single API call&#xA;&lt;code&gt;skidder.set_throttle(left_throttle, right_throttle)&lt;/code&gt;,&#xA;does not get much simpler than this!&lt;/p&gt;</description>
    </item>
    <item>
      <title>Raspberry Pi Motor Control Software</title>
      <link>http://www.rustyeddy.com/notes/rpi-motor-control-service/</link>
      <pubDate>Tue, 14 May 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/rpi-motor-control-service/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;TODO ~ replace image with one of the Raspberry Pi Controller&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;This software adds a Skid Steer motor control software to the&#xA;&lt;a href=&#34;http://github.com/mobilerobot-io/rpid&#34;&gt;Raspberry Pi Device Server&lt;/a&gt;&#xA;device server.  RPID adds motor controls accessible via both MQTT and&#xA;REST APIs, as well as directly with the Skidder python library.&lt;/p&gt;</description>
    </item>
    <item>
      <title>MQTT For Controllor Communication</title>
      <link>http://www.rustyeddy.com/notes/mqtt-comm/</link>
      <pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/mqtt-comm/</guid>
      <description>&lt;p&gt;The MQTT message bus is a simple but critical element of our MBR&#xA;software design.  MQTT provides what is known as a &lt;em&gt;publish/suscribe&lt;/em&gt;&#xA;or &lt;em&gt;pubsub&lt;/em&gt; communications model.  This model of machine to machine&#xA;communication has some attractive benefits for realtime driving&#xA;algorithms that we will discuss in this post.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Control Station Display</title>
      <link>http://www.rustyeddy.com/notes/touch-screen-display/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/touch-screen-display/</guid>
      <description>&lt;p&gt;We are going to build a simple control station that begins with a&#xA;Raspberry Pi and connected &lt;em&gt;7 inch touchscreen tablet&lt;/em&gt;.  I have it&#xA;setup in &amp;ldquo;kiosk mode&amp;rdquo;, which is basically full page chrome without the&#xA;tabs and tool bars etc.&lt;/p&gt;</description>
    </item>
    <item>
      <title>TLV the Type Length Vector Protocol</title>
      <link>http://www.rustyeddy.com/notes/tlv-and-realitime-communication/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      <guid>http://www.rustyeddy.com/notes/tlv-and-realitime-communication/</guid>
      <description>&lt;p&gt;TLV is a very simple communication protocol that can be used to send&#xA;messages around a complex, distributed system.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
