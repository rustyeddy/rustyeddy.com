<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>rusty eddy on Rusty Eddy</title>
    <link>http://rustyeddy.com/</link>
    <description>Recent content in rusty eddy on Rusty Eddy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://rustyeddy.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Eddy Consulting, LLC</title>
      <link>http://rustyeddy.com/resume/jobs/eddy-consulting/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/eddy-consulting/</guid>
      <description>&lt;p&gt;Worked with clients to scope project requirements, establish
budgets and schedules, design software architecture and
lead teams of engineers through entire software development
lifecycles. Project work included but not limited to C; C++; Python;
PHP; JavaScript; Java &amp;amp; MySQL. &lt;a href=&#34;{{ .Permalink }}&#34;&gt;read more&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>University of Southern California ~ MSCS</title>
      <link>http://rustyeddy.com/resume/edu/usc/</link>
      <pubDate>Tue, 02 Jan 1996 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/edu/usc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>AT&amp;T</title>
      <link>http://rustyeddy.com/resume/jobs/att/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/att/</guid>
      <description>&lt;p&gt;Co Architect on a &lt;em&gt;Zero Configuration&lt;/em&gt; network provision and
configuration management system.  We designed a sieres of
&lt;em&gt;micro-services&lt;/em&gt; to integrate existing company services, and
introduced new resources.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>DirecTV</title>
      <link>http://rustyeddy.com/resume/jobs/directv/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/directv/</guid>
      <description>&lt;p&gt;Architectural lead, and software development lead for a new &lt;em&gt;Software
Defined Networking&lt;/em&gt; &lt;em&gt;Multicast Route Controller&lt;/em&gt;.  Contributed to the
OpenSource SDN controller project ONOS.  &lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Cisco Systems</title>
      <link>http://rustyeddy.com/resume/jobs/cisco-systems/</link>
      <pubDate>Wed, 01 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/cisco-systems/</guid>
      <description>&lt;p&gt;Original member of the Multicast Routing team.  Team of 12 responsible
for the design, implementation and testing the complete suite of
Multicast Routing protocols for the Cisco Carrier Routing System
(CRS).  Worked this project from early design through product launch
into maintenance. &lt;a href=&#34;{{.Permalink}}&#34;&gt;read more&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>California State University, Long Beach</title>
      <link>http://rustyeddy.com/resume/edu/csulb/</link>
      <pubDate>Tue, 02 Jan 1996 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/edu/csulb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>USC ~ ISI</title>
      <link>http://rustyeddy.com/resume/jobs/usc-isi/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/usc-isi/</guid>
      <description>&lt;p&gt;Led the effort to add IGMP/PIM and Multicast Routing Information
Base (MRIB) to the Open Source &lt;em&gt;GateD&lt;/em&gt; suite of routing protocols.
Lead graduate students and others that would eventually become
prominent members of the computer networking community. &lt;a href=&#34;{{.Permalink}}&#34;&gt;read
more&lt;/a&gt; &amp;hellip;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Education</title>
      <link>http://rustyeddy.com/resume/education/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/education/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Retix</title>
      <link>http://rustyeddy.com/resume/jobs/retix/</link>
      <pubDate>Tue, 01 Aug 1995 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/retix/</guid>
      <description>&lt;p&gt;Promoted to lead the team of 6 engineers that developed and
automated test plans for L2 switches, OSPF, RIP and BGP &lt;a href=&#34;{{.Permalink}}&#34;&gt;read
more&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Rockwell, Intl. Space Systems Division</title>
      <link>http://rustyeddy.com/resume/jobs/rockwell/</link>
      <pubDate>Mon, 03 Jan 1994 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/rockwell/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Lead Sysadmin&lt;/strong&gt;: lead a team of 5 Sysadmins responsible for the
use and well being of Engineering Departments 300+ UNIX
workstations, servers (Sun, HP, DEC) and network.
&lt;a href=&#34;{{.Permalink}}&#34;&gt;read more&lt;/a&gt;&amp;hellip;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>California State University ~ Chancelors Office</title>
      <link>http://rustyeddy.com/resume/jobs/csu-chancelor/</link>
      <pubDate>Tue, 01 Aug 1995 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/csu-chancelor/</guid>
      <description>&lt;p&gt;I was hired by the CSU Chancellors Office for a &lt;em&gt;&amp;ldquo;special&amp;rdquo;&lt;/em&gt; project, a
habit I seem to have gotten myself into regularly over the
years. &lt;a href=&#34;{{.Permalink}}&#34;&gt;read more&lt;/a&gt;
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Stream HLS from NGINX</title>
      <link>http://rustyeddy.com/notes/stream-hls-from-nginx/</link>
      <pubDate>Fri, 31 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/stream-hls-from-nginx/</guid>
      <description>Setup gzip to compress text based M3U8 index files. They can be large and are downloaded frequently.
 May need to shorten the TTL values for M3U8.
 For VOD the index file is statis, hence does not change and only needs to be downloaded once.
 Security over HTTPS
 Browser to display video in HTML5 tags.
  x264enc ! mpegtsmux ! hlssink max-files=5</description>
    </item>
    
    <item>
      <title>Using Gstreamer to create an RTSP Server</title>
      <link>http://rustyeddy.com/notes/gstreamer-rtsp-server/</link>
      <pubDate>Thu, 30 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/gstreamer-rtsp-server/</guid>
      <description>Of it earlier this month I set out to start streaming video From the CSI camera, that is a raspberry pie camera, From a moving vehicle for the vehicles guidance and navigation.
I was surprised to find the the whole world is streaming video is Incredibly complex, NFL 2019 we do not have A solution that is easy universally adopted.
TLDR; Gstreamer RTSP Pipeline We are streaming our video from a Raspberry Pi Camera (CSI) attached to, either a Raspberry Pi or a Jetson Nano, GST extracts the video from the CSI camera using a custom driver (raspicamsrc or nvargussrc) for the RPi or Nano respectively.</description>
    </item>
    
    <item>
      <title>ESP32 C&#43;&#43; LED Blinker</title>
      <link>http://rustyeddy.com/portfolio/esp32-c&#43;&#43;-blink-program/</link>
      <pubDate>Sun, 19 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/esp32-c&#43;&#43;-blink-program/</guid>
      <description>I wrote an LED C++ class to configure an ESP32 GPIO pin as a digital output, such that we can turn the LED on and off, by setting the voltage to pin HIGH, turn the LED off by setting pin to 0.
The ESP32 esp-idf development software, built on top of FreeRTOS is a rich and powerful environment that is friendly to command line hackers, but certainly C-centric. However, C++ programs are just a couple small &amp;ldquo;bookeeping items&amp;rdquo; away from full Ojbect Oriented Programming!</description>
    </item>
    
    <item>
      <title>Mobile Robot Project</title>
      <link>http://rustyeddy.com/portfolio/mobile-robot-project/</link>
      <pubDate>Fri, 17 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/mobile-robot-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>RedEye Project Streaming Video and Computer Vision</title>
      <link>http://rustyeddy.com/portfolio/redeye-rpi-camera-and-python/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/redeye-rpi-camera-and-python/</guid>
      <description>The RedEye project goal is to build a fast and flexible video streaming application to be used on a mobile robot (i.e. a rover style vehicle).
Architecture RedEye is an application with the purpose of capturing and consuming live video streams, filter incoming streams into formats ready for various consumers.
In other words, RedEye can expect to manage cameras and capture video from one or more Raspberry Pi, Jetson Nano or Linux / MacOS USB port.</description>
    </item>
    
    <item>
      <title>WebRTC What is it?</title>
      <link>http://rustyeddy.com/notes/webrtc-what-is-it/</link>
      <pubDate>Sun, 05 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/webrtc-what-is-it/</guid>
      <description>WebRTC stands for Web Realtime Communications. Yea, I know you can Google too, now let&amp;rsquo;s ask, &amp;ldquo;What does that mean?&amp;rdquo;.
Realtime Communication Generally speaking we all, intuitively know what Real Time means, it is a sense of what is happening now. OK, that is reasonable, after all it is how we live the majority of our lives.
Communication &amp;ldquo;Topologies&amp;rdquo;  One to one One to many many to many many to one?</description>
    </item>
    
    <item>
      <title>GStreamer building realtime media pipelines</title>
      <link>http://rustyeddy.com/notes/gstreamer-building-streaming-pipelines/</link>
      <pubDate>Sat, 04 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/gstreamer-building-streaming-pipelines/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Streaming Video is Complicated</title>
      <link>http://rustyeddy.com/notes/streaming-video/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video/</guid>
      <description>I need to stream live video from a moving vehical with a connected camera and a possibly connected wifi.
Live High Resolution Video Video will stream from the vehicle to be picked up by video consumers and processed as required. Examples of consumers are Live Video Display on our (Webapp), OpenCV for vision algoritms.
High Demand For Low Resolution It turns out that computer vision alogrithms typically run quite a bit faster on lower resolution images, the additional information from these hi-res images can slow down the type of algorithms we are interested in by many factors.</description>
    </item>
    
    <item>
      <title>Streaming Video Protocols</title>
      <link>http://rustyeddy.com/notes/streaming-video-protocols/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-protocols/</guid>
      <description>rtp rtsp rtmp hlsl mjpeg mpeg-dash mpeg jpeg  RTP ~ Real Time Protocol Actually holds payloads containing arbitrary, but time/delay sensitive media (audio, video, live conversations, etc). Incorporates enough controls to allow for network congestion, reciever compensation and more.
RTSP What it is and How to use it Real Time Streaming Protocol (RTSP)
General consensus says that RTSP is a good choice for low latency, local area networks.</description>
    </item>
    
    <item>
      <title>Streaming Video Tools</title>
      <link>http://rustyeddy.com/notes/streaming-video-tools/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-tools/</guid>
      <description>The grandparents of streaming video, and snapshots, read, writing and transcoding video and single frame images are ffmpeg, vlc and gstreamer.
Other platforms, such as the wildly cool and inexpensive Raspberry Pi and attached CSI Camera (Raspberry Pi Camera) have thier own set of utilities: like raspivid. Or the NVidia Nano with it&amp;rsquo;s gst-streamer plugins and nvgst-capture/nvgst-playback utilies.
 This writting is as of March 2019
 GStreamer Complex, Flexible, Future Proof GStreamer really complex pipelines but insanely flexible.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Camera and Multiple Ports</title>
      <link>http://rustyeddy.com/notes/raspberry-pi-camera-multiple-ports/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/raspberry-pi-camera-multiple-ports/</guid>
      <description>&lt;p&gt;As I started bumbling around trying to figure the best way to stream
[live video from a moving vehicle], I found that the Raspberry Pi
camera is capable of producing filtered versions of the images it is
producing, through &lt;em&gt;video ports&lt;/em&gt;.
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Arduino Software</title>
      <link>http://rustyeddy.com/portfolio/arduino-software/</link>
      <pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/arduino-software/</guid>
      <description>&lt;p&gt;A repo full of C/C++ software that can control a ton of sensors,
communication shieds and even more sophisticated chips. The sample
code pointed to by the following link:
&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Flask Webapp Control Raspberry Pi Server</title>
      <link>http://rustyeddy.com/portfolio/flask-server-control-raspberry-pi-camera/</link>
      <pubDate>Fri, 22 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/flask-server-control-raspberry-pi-camera/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Streaming Live Video on a Local Lan Vs. Internet</title>
      <link>http://rustyeddy.com/notes/streaming-video-local-network/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-local-network/</guid>
      <description>differences in local vs. internet and streaming video
 live stream vs. video on demand
 what does real time mean?
 what to do with late packets?
 UDP vs. TCP in the local network
 RTP and UDP
 RTP and RTCP
 RTP and RTSP
 RTP and Multicast
 Tools used
  TODO: workflowy outline
RTSP is a good option for streaming video in a local setup up, where minimal delay is the highest priority.</description>
    </item>
    
    <item>
      <title>Interests</title>
      <link>http://rustyeddy.com/resume/interests/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/interests/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>http://rustyeddy.com/resume/pubs/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/pubs/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Ramesh Govindan, et el.&lt;/strong&gt; &lt;em&gt;&amp;ldquo;An Architecture for Stable, Analyzable
Internet Routing&amp;rdquo;&lt;/em&gt;, IEEE Network Magazine, Jan-Feb 1999.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy, Ramesh Govindan,&lt;/strong&gt; &lt;em&gt;&amp;ldquo;Testing Protocol Implementations
with pkt&amp;rdquo;&lt;/em&gt;, Networld+Interop 99 Engineers Conference Proceedings, June
1999&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy&lt;/strong&gt;, &lt;em&gt;&amp;ldquo;Emulating Multicast Routing Protocols in a Software
Defined Networking (SDN) Controller&amp;rdquo;&lt;/em&gt;, AT&amp;amp;T 2016 Software Symposium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy&lt;/strong&gt;, &lt;em&gt;&amp;ldquo;Testing Multicast SDN Networks in a Container&amp;rdquo;&lt;/em&gt;,
AT&amp;amp;T 2016 Software Symposium&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Skills</title>
      <link>http://rustyeddy.com/resume/skills/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/skills/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Otto the Pluggable Micro Server for Macro Controllers</title>
      <link>http://rustyeddy.com/portfolio/otto-micro-server/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/otto-micro-server/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Rusty Eddy</title>
      <link>http://rustyeddy.com/resume/about/</link>
      <pubDate>Sat, 11 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/about/</guid>
      <description>Software | Communications | Robotics | ~ + ~ | Engineer | Developer | Architect</description>
    </item>
    
    <item>
      <title>Streaming Video ~ On Demand Vs. Live</title>
      <link>http://rustyeddy.com/notes/streaming-video-on-demand-vs-live/</link>
      <pubDate>Tue, 12 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-on-demand-vs-live/</guid>
      <description> VOD can take time to buffer Live buffering creates delay and ruins effectiveness  </description>
    </item>
    
    <item>
      <title>About MicroServices and Distributed Systems</title>
      <link>http://rustyeddy.com/notes/about-distributed-systems-and-micro-services/</link>
      <pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/about-distributed-systems-and-micro-services/</guid>
      <description>I am very much dedicated to building distributed, micro-service style systems. I prefer to piece solutions together based on lean, efficient, best of breed components.
More Complex? Many rightly claim that a distributed system increases the complexity over the monolith, and it is true that communicaiton boundaries must be explicitly created, and that communications between the boundarys becomes a potential for failure, or reduced reliability that tightly couple systems do not have to deal with.</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>http://rustyeddy.com/resume/contact/</link>
      <pubDate>Fri, 09 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/contact/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Design Graphics with Canva</title>
      <link>http://rustyeddy.com/notes/design-graphics-with-canva/</link>
      <pubDate>Sun, 22 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/design-graphics-with-canva/</guid>
      <description>Canva is a very simple yet powerful graphics art tool, for non-graphic artists. You can to on there and create free stuff, or, if you are a pro and create graphics all the time, you can optin for a reasonable montly fee.
I created the RedEye logo for the Mobile Robot Project using Canva, it took me 15 minutes, including remembering my forgotten password.
There are a ton of templates, graphics and photos that can be easily drag-n-dropped into place.</description>
    </item>
    
    <item>
      <title>Multicast Routing</title>
      <link>http://rustyeddy.com/portfolio/multicast-routing/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/multicast-routing/</guid>
      <description> Multicast Routing Multicast protocol design and development, as well as other protocols like BGP, OSPF,
 USC/ISI pimd, gated pim-ssm, BGMP (defunct), BGP and OSPF Cisco Systems Carrier Routing System (CRS) Technical Lead for the Multicast Team Green Hills RTOS kernel development enabling multicast routing  References  link to pimd dug up by XXXX link to Cisco CRS link to GateD / &amp;hellip;  </description>
    </item>
    
    <item>
      <title>Software Defined Networking Hybrid Controller</title>
      <link>http://rustyeddy.com/portfolio/software-defined-networking/</link>
      <pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/software-defined-networking/</guid>
      <description></description>
    </item>
    
    <item>
      <title>pkt The Network Test Tool</title>
      <link>http://rustyeddy.com/portfolio/pkt-the-network-tester/</link>
      <pubDate>Thu, 22 May 2008 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/portfolio/pkt-the-network-tester/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Video Cheat Sheet</title>
      <link>http://rustyeddy.com/notes/video-cheat-sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/video-cheat-sheet/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>