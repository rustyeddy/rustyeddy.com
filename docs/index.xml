<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rusty Eddy</title>
    <link>http://rustyeddy.com/</link>
    <description>Recent content on Rusty Eddy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 10 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://rustyeddy.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Objective and Milestones</title>
      <link>http://rustyeddy.com/software/objectives-and-milestones/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/objectives-and-milestones/</guid>
      <description>Watch from the begining of the speech from 0:17 seconds to the 42 second mark (or if you want the whole thing. It is great).  Thank You, Arnold! I could not have said it any better! First Rule of Success ~ Have a Vision   Arnold says the First Rule of Success is to have a vision. I totally agree with that. I mean, how can you consider something a success if you haven&amp;#39;t defined what success is.</description>
    </item>
    
    <item>
      <title>Software Development Life Cycle</title>
      <link>http://rustyeddy.com/software/software-development-life-cycle/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/software-development-life-cycle/</guid>
      <description>The entire team stays in sync and consistently follow the    projects establish Software Development Life Cycle process.    Avoiding key elements of this process will accumulate technical debt that caries an interest rate that you do NOT want snowball.   Symptoms     Changes made to software are often lost    Large forklift changes frequently cause compilation problems and long integration times.</description>
    </item>
    
    <item>
      <title>Piece of Mind with Testing</title>
      <link>http://rustyeddy.com/software/testing/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/testing/</guid>
      <description>Do not force your customers to find your bugs.    Good software becomes great when old features become more reliable and new features do resurect old bugs.    NOTE: This is when the customer set objective to the customer acceptance. Symptoms  Software is always crashing or acting unpredictable  Customers become the QA department, and get angry  Problems pop like a wack-a-mole  Testing is tedious  Testing resources are scarce and developers have very limited test time.</description>
    </item>
    
    <item>
      <title>No Hassle Updates with CI/CD</title>
      <link>http://rustyeddy.com/software/cicd/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/cicd/</guid>
      <description>    Give your customers their bug fixes and new features in days or weeks, not months or years.    Forklift updgrades that break stuff are not sexy. Regular small hardly noticed updates are always appreciated!   Symptoms     No idea if your systems are bleeding    No idea if you are over paying    Can not identify total bill expenses    Next: Measure and Optimize </description>
    </item>
    
    <item>
      <title>The Feedback Loop Bugs Tracking and Feature Requests</title>
      <link>http://rustyeddy.com/software/feedback-loop-bugs/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/feedback-loop-bugs/</guid>
      <description>   Customer engagement happens before the product is created, during all of the    the entire process (iterations) of the agile development process.    By this point, the customer engagement should be pretty well established adn that &amp;#34;bugs&amp;#34; should be handled similar to other communications.   </description>
    </item>
    
    <item>
      <title>Improvements with Measurements and Analytics</title>
      <link>http://rustyeddy.com/software/measure-and-optimize/</link>
      <pubDate>Sat, 04 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/measure-and-optimize/</guid>
      <description> Symptoms     Do you know if you are loosing business because of bottlenecks in your workflow?    Are you over paying for services    Do you know how efficient your system is.    Next: Join The Gang! </description>
    </item>
    
    <item>
      <title>University of Southern California ~ MSCS</title>
      <link>http://rustyeddy.com/resume/edu/usc/</link>
      <pubDate>Tue, 02 Jan 1996 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/edu/usc/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Radian Laser</title>
      <link>http://rustyeddy.com/resume/clients/radian-laser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/radian-laser/</guid>
      <description>&lt;p&gt;Radian is a small, fast moving startup that sells Laser Engravers and
Cutters. I manage five software projects, including two Web
Applications for the control and calibration of the Laser system. I
am also responsible for the successful delivery and maintanance of the
products Firmaware and Fleet Management system.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C/C++, Go &amp;amp; Python, embedded systems and microservices.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Cloud Trek</title>
      <link>http://rustyeddy.com/resume/clients/alchemy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/alchemy/</guid>
      <description>&lt;p&gt;Alchemy Networks is an indepently owned service provider. I automated
the provisioning of their Private Cloud Service offering. I was an
individual contributor on this project. I collaborated with another
developer.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Ansible, Linux, Python, Websockets, Networking&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>DirecTV / AT&amp;T</title>
      <link>http://rustyeddy.com/resume/clients/att/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/att/</guid>
      <description>&lt;p&gt;I was hired by DirecTV (and subsequentyly AT&amp;amp;T) to help lead the new
Software Defined Networking (SDN) team. We were tasked with replacing
the companies aging production Video Distribution Network with a new
modernized design. Project goals included:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Replace aged network with modern SDN solution&lt;/li&gt;
&lt;li&gt;Solution to incrementally replace existing production network&lt;/li&gt;
&lt;li&gt;Development would build on industry standard OpenSource solutions&lt;/li&gt;
&lt;li&gt;Had to be Reliable and Scalable&lt;/li&gt;
&lt;li&gt;Linux, OpenFlow, Java and Python&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Sierra Hydrographics</title>
      <link>http://rustyeddy.com/resume/clients/sierra-hydrog/</link>
      <pubDate>Sat, 02 Jan 2010 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/sierra-hydrog/</guid>
      <description>&lt;p&gt;Led the design and development of automated data collection for
hydrological gauging stations.  Data is gathered by pulling data from
line of sight telemetry radios and NOAA/LRGS satellite ground
stations. Data is fed to timeseries server for hydrological
calculations and alert monitoring.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Timeseries database, C/C++, PHP, Python and Java.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Green Hills Software</title>
      <link>http://rustyeddy.com/resume/clients/green-hills/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/green-hills/</guid>
      <description>&lt;p&gt;I worked on a small team that added multicast forwarding to the &lt;em&gt;Integrity&lt;/em&gt; RTOS
kernal.  Modified multicast routing daemon to run on same operating
system allowing the product to serve as the foundation for a military
grade network switch/router.  Added IPv6 Neighbor Discovery to the
suite of routing protocols.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;C/C++ and Network Routing Protocols; Real Time OS.&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>The IMS Company</title>
      <link>http://rustyeddy.com/resume/clients/ims-company/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/clients/ims-company/</guid>
      <description>&lt;p&gt;Led a project to replicate entertainment media (music, video and
games) from a single media source to hundreds of in­flight
entertainment units with minimal redundancy.  Contributed to the
design and development of an inflight entertainment server.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Perl, Python, C/C++ and Java&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Cisco Systems</title>
      <link>http://rustyeddy.com/resume/jobs/cisco-systems/</link>
      <pubDate>Wed, 01 Feb 2006 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/cisco-systems/</guid>
      <description>&lt;p&gt;Original member of the Multicast Routing team.  Team of 12 responsible
for the design, implementation and testing the complete suite of
Multicast Routing protocols for the Cisco Carrier Routing System
(CRS).  Worked this project from early design through product launch
into maintenance.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Computer Networks, Multicast Routing, C/C++, Real Time, Distributed
Systems&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>California State University, Long Beach</title>
      <link>http://rustyeddy.com/resume/edu/csulb/</link>
      <pubDate>Tue, 02 Jan 1996 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/edu/csulb/</guid>
      <description></description>
    </item>
    
    <item>
      <title>USC ~ ISI</title>
      <link>http://rustyeddy.com/resume/jobs/usc-isi/</link>
      <pubDate>Thu, 20 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/usc-isi/</guid>
      <description>&lt;p&gt;Led the effort to add IGMP/PIM and Multicast Routing Information
Base (MRIB) to the Open Source &lt;em&gt;GateD&lt;/em&gt; suite of routing protocols.
Mentored graduate students and others that would eventually become
prominent members of the computer networking community.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Retix</title>
      <link>http://rustyeddy.com/resume/jobs/retix/</link>
      <pubDate>Tue, 01 Aug 1995 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/retix/</guid>
      <description>Promoted to lead the team of 6 engineers that developed and automated test plans for L2 switches, OSPF, RIP and BGP
 Implemented an automated test framework and led junior engineers in developing the automated test suites. C; C++; Perl; TCL
 Provided 3rd level customer support, serious customer problems that could not be resolved by customer support or field engineers became my teams responsibility to diagnose and determine solutions and workarounds was required.</description>
    </item>
    
    <item>
      <title>Rockwell, Intl. Space Systems Division</title>
      <link>http://rustyeddy.com/resume/jobs/rockwell/</link>
      <pubDate>Mon, 03 Jan 1994 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/rockwell/</guid>
      <description>&lt;p&gt;Led a team of 5 Sysadmins responsible for the use and well being of
Engineering Departments 300+ UNIX workstations, servers (Sun, HP, DEC)
and network.&lt;/p&gt;

&lt;p&gt;On a team that Developed a Real Time OS that was embedded in a variety
of space and military projects.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>California State University ~ Chancelors Office</title>
      <link>http://rustyeddy.com/resume/jobs/csu-chancelor/</link>
      <pubDate>Tue, 01 Aug 1995 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/jobs/csu-chancelor/</guid>
      <description>&lt;p&gt;I was hired to install and manage the departments first AT&amp;amp;T Unix
Mini-computers, UUNET connection and write a bulletin board system for
California State Educators.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Building a Product or Service</title>
      <link>http://rustyeddy.com/notes/building-a-product-or-service/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/building-a-product-or-service/</guid>
      <description></description>
    </item>
    
    <item>
      <title>RedEye Webapp ~ Front End</title>
      <link>http://rustyeddy.com/projects/redeye-gui/</link>
      <pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/projects/redeye-gui/</guid>
      <description>About The Image The image above depicts the RedEye camera running with the Motion Detection VideoPipeline Plugin. It is identifying and tracking moving objects within the video.
About The Webapp This Webapp was written with the Vue.js Framework. It uses Bootstrap for styling up the web page.
Single Page Application (SPA) The website is a true Single Page Application (SPA) using the Vue Router and Vuex for state management.</description>
    </item>
    
    <item>
      <title>Call To Action - Let me Know What do You think</title>
      <link>http://rustyeddy.com/software/call-to-action/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/call-to-action/</guid>
      <description>&amp;lt;section id=&amp;#34;cta&amp;#34; class=&amp;#34;row cta-text&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;col-sm-6&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;card&amp;#34;&amp;gt; &amp;lt;div class=&amp;#34;card-body&amp;#34;&amp;gt; &amp;lt;h5 class=&amp;#34;card-title&amp;#34;&amp;gt;What to Expect&amp;lt;/h5&amp;gt; &amp;lt;p class=&amp;#34;card-text&amp;#34;&amp;gt;	We will cover the entire Software Development Life Cycle (SDLC) process before any code is written, through the delivery and maintenance of a production piece of software. &amp;lt;/p&amp;gt; &amp;lt;p class=&amp;#34;card-text&amp;#34;&amp;gt; As this series moves along, I will be demonstrating the techniques using 100% free tools and OpenSource software, such that you can easily follow along.</description>
    </item>
    
    <item>
      <title>Predictable IoT Software Development</title>
      <link>http://rustyeddy.com/software/outline/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/outline/</guid>
      <description>Overview     Assumption: The customer is known    Assumption: The application has been vetted    Make Software Development Predictable. We want to make the software development processes predictable, to remove the mysterious schedules and never ending drain to the budget.    Right size the process: Process is essential for success. Minimizing process is essential for effeciency.    I want to document the things that make my life, as a developer easier and most important, help deliver what my customers want, on time and within bugdet.</description>
    </item>
    
    <item>
      <title>The Software Development Process</title>
      <link>http://rustyeddy.com/software/lander02/</link>
      <pubDate>Sun, 05 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/lander02/</guid>
      <description> TODO Put Headline here  Clear Objectives and Milestones with Kanban (PM)   If you find yourself with what feels like an excessive amount of instances of mis-communication Organization and Synchronization with Version Control (VC)  Quality Assurance with Testing with Test Driven Design (TDD)  Painless updates for happy clients with (CI/CD)  Maintain clear communication with your clients (Help Desk)  Analyze your systems and flush out bottle necks and operational waste (Analytics)  </description>
    </item>
    
    <item>
      <title>RedEye Camera ~ Backend</title>
      <link>http://rustyeddy.com/projects/redeye-camera/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/projects/redeye-camera/</guid>
      <description>About the Camera Software The RedEye Camera software streams video over IP through configurable Computer Vision Pipelines with example pipelines that include:
 Face Detection Motion Detection Object Tracking  Pipelines can be built as plugins and added directly to the camera with runtime configuration. This allows you to add your own Computer Vision application(s) without worrying too much about the software that controls the camera.
Camera APIs The Camera provides APIs for camera control, configuration and storage.</description>
    </item>
    
    <item>
      <title>Career Summary</title>
      <link>http://rustyeddy.com/resume/summary/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/summary/</guid>
      <description>I am a Software Engineer and Contract Programmer living in Huntington Beach, CA with my family. I build micro-services and work on micro-controllers, usually with Go, C/C++, Python and JavaScript (among other techs).</description>
    </item>
    
    <item>
      <title>Skills and Interests</title>
      <link>http://rustyeddy.com/resume/skills/</link>
      <pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/skills/</guid>
      <description> Go, C/C++, Python and JavaScript (and many others..) Computer Networks, Multicast Video Distribution Distributed systems and realtime communications DevOps, cloud automation and continuous delivery Fullstack software development, reactive front-ends with VueJS MicroServices: REST APIs, Websockets, etc. Linux Systems and OpenSource Software  </description>
    </item>
    
    <item>
      <title>Webdev Guide</title>
      <link>http://rustyeddy.com/notes/webdev-guide/</link>
      <pubDate>Sun, 01 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/webdev-guide/</guid>
      <description>This section of my website is a collection of processes and best practices regarding software development. I gather them here, in an attempt to remember and formalize.
Over the years, I have collected a set of practices and certain software practices and patterns. When I work for a client these practices will be documented as part of the development process.
This section of my website is dedicated to the development of web sites and apps.</description>
    </item>
    
    <item>
      <title>Red Eye Video Server</title>
      <link>http://rustyeddy.com/notes/redeye/</link>
      <pubDate>Fri, 24 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/redeye/</guid>
      <description>The Red Eye project is a service definition rapper around inexpensive cameras attached to inexpesive micro-controllers that take pretty good video.
The video streams are built using the GStreamer library. The camera native capabilities are used to extract as high quailty, realtime images possible.
The video streams will be consumed by one or more sinks, including but not limited to Files, cloud storage, High Def Display and Computer Vision libraries.</description>
    </item>
    
    <item>
      <title>Skid Steering</title>
      <link>http://rustyeddy.com/notes/skid-steering/</link>
      <pubDate>Wed, 15 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/skid-steering/</guid>
      <description>Skid steering basics
 Based on fixed direction wheels[1] or tracks There are two groups or sides of wheels: left and right All wheels in a group MUST always point in the same direction All wheels in a group MUST always rotate at the same rate Direction is determined by the speed of the two wheel groups  To move straight all motors rotate at the same rate Forward and Reverse are determined by positive and negative values Turning is achieved by varying the throttle on the right and left   Example The Skidder class has the following API, as you can see all of the movements we desire can be accomplished with a single API call</description>
    </item>
    
    <item>
      <title>Control Station Display</title>
      <link>http://rustyeddy.com/notes/touch-screen-display/</link>
      <pubDate>Mon, 22 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/touch-screen-display/</guid>
      <description>&lt;p&gt;We are going to build a simple control station that begins with a
Raspberry Pi and connected &lt;em&gt;7 inch touchscreen tablet&lt;/em&gt;.  I have it
setup in &amp;ldquo;kiosk mode&amp;rdquo;, which is basically full page chrome without the
tabs and tool bars etc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Sensor Station</title>
      <link>http://rustyeddy.com/notes/sensor-station/</link>
      <pubDate>Wed, 03 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/sensor-station/</guid>
      <description>Sensor by rusty-1</description>
    </item>
    
    <item>
      <title>OC Low Vision Website</title>
      <link>http://rustyeddy.com/projects/oclv-website/</link>
      <pubDate>Sun, 17 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/projects/oclv-website/</guid>
      <description>Orange County Low Vision is old school when it comes to personal customer service. According to Kelly Eddy, the owner of OCLV:
 &amp;ldquo;Many of our clients are well into their 80&amp;rsquo;s and above, further more we typically do business in their homes. Trust is everything.&amp;rdquo;
 Since Personal Service and Trust have always been the foundation of OCLV &amp;ldquo;business&amp;rdquo; model, it is impairative the new website project reflect the same personable reality, yet leverage the internet to the benefit of the business and the client.</description>
    </item>
    
    <item>
      <title>Publications</title>
      <link>http://rustyeddy.com/resume/pubs/</link>
      <pubDate>Fri, 21 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resume/pubs/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Ramesh Govindan, et el.&lt;/strong&gt; &lt;em&gt;&amp;ldquo;An Architecture for Stable, Analyzable
Internet Routing&amp;rdquo;&lt;/em&gt;, IEEE Network Magazine, Jan-Feb 1999.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy, Ramesh Govindan,&lt;/strong&gt; &lt;em&gt;&amp;ldquo;Testing Protocol Implementations
with pkt&amp;rdquo;&lt;/em&gt;, Networld+Interop 99 Engineers Conference Proceedings, June
1999&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy&lt;/strong&gt;, &lt;em&gt;&amp;ldquo;Emulating Multicast Routing Protocols in a Software
Defined Networking (SDN) Controller&amp;rdquo;&lt;/em&gt;, AT&amp;amp;T 2016 Software Symposium&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Rusty Eddy&lt;/strong&gt;, &lt;em&gt;&amp;ldquo;Testing Multicast SDN Networks in a Container&amp;rdquo;&lt;/em&gt;,
AT&amp;amp;T 2016 Software Symposium&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Inexpensive Motor Controllers for Arduino and Raspberry Pi</title>
      <link>http://rustyeddy.com/notes/motor-controlor-notes/</link>
      <pubDate>Wed, 22 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/motor-controlor-notes/</guid>
      <description>&lt;p&gt;I prefer to use an Arduino with a Motor Controller over say a
Raspberry Pi with a motor-controller.  I believe the Arudino has
better support for dedicated Real-time software vs. the Raspberry Pi
and as a superior platform for general computing including running
Control Software.  This is how we do it on the West side &amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Control System Design</title>
      <link>http://rustyeddy.com/notes/control-design/</link>
      <pubDate>Sat, 05 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/control-design/</guid>
      <description>Early in the process of building the first set of mobile robots I discovered that I was not going to settle on a single micro controller.
The first two obvious choices being the Arduino or Raspberry Pi, for which I tried both with a modest level of success. I quickly realized that I would not be providing my sole focus on either platform, neither was sufficient for my grand plans for a number of reasons.</description>
    </item>
    
    <item>
      <title>Power</title>
      <link>http://rustyeddy.com/notes/power/</link>
      <pubDate>Mon, 02 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/power/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Comparing the Arduino and Raspberry Pi</title>
      <link>http://rustyeddy.com/notes/rpi-v-arduino/</link>
      <pubDate>Wed, 14 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/rpi-v-arduino/</guid>
      <description>Arduino vs. Raspberry Pi in Control Systems I believe the Arudino has better hardware support, a real-time clock and due to itself simplicity creates a better platform to interact with external hardware in real-time.
The Raspberry Pi, however has a much more powerful set of processors, more memory and a general purpose operating system making it a more suitable choice for general purpose, sophisticated software, such as communicaitons and control software.</description>
    </item>
    
    <item>
      <title>IP Multicast the basics</title>
      <link>http://rustyeddy.com/notes/ip-multicast/</link>
      <pubDate>Sat, 03 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/ip-multicast/</guid>
      <description>IP Multicast addresses The typical IP addresses used by computers networking today are known as unicast addresses, meaning that every unicast address as a single (physical or logical) end point.
Most all computer networking is point to point between two specific IP addresses, you name it: web browsing, email exchange, transfer files and so much more.
However, there are other more specific forms on communication available and occasionally used: Broadcast and Multicast.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://rustyeddy.com/notes/zeromq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/zeromq/</guid>
      <description> ZeroMQ   Man I hope this software is as good as the opening of the ZGuide! </description>
    </item>
    
    <item>
      <title></title>
      <link>http://rustyeddy.com/quotes/massively-connected/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/quotes/massively-connected/</guid>
      <description>ZeroMQ ZGuide   We live in a connected world, and modern software has to navigate this world. So the building blocks for tomorrow&amp;#39;s very largest solutions are connected and massively parallel. It&amp;#39;s not enough for code to be &amp;#34;strong and silent&amp;#34; any more. Code has to talk to code. Code has to be chatty, sociable, well-connected. Code has to run like the human brain, trillions of individual neurons firing off messages to each other, a massively parallel network with no central control, no single point of failure, yet able to solve immensely difficult problems.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://rustyeddy.com/resources/messaging-and-communication-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/resources/messaging-and-communication-packages/</guid>
      <description>Messaging and Communications   ZeroMQ :: is a messaging package that has an emphasis on fast and intuitive API. Man I hope this package is as good as it&amp;#39;s beginning guide  Gorilla/mux :: A built to serve up REST api&amp;#39;s, gorilla does that and some more important stuff like serve up static websites and provide support for initiating websockets  Gorilla/websocket :: Handles the full websocket spec. Works great with the standard http router and Gorilla/mux the full featured router.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://rustyeddy.com/software/scratch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/scratch/</guid>
      <description>With at least a first slash at some milestones and goals that the entire team can huddle around. Let&amp;#39;s roll up our sleeves and get Buzzin!   But before we scatter to our cubes and bury our heads behind terminals, let&amp;#39;s all agree to get on the same page by choosing a set of tools (manual or electric) that we all are going to agree on using in a consistent and collaborative way!</description>
    </item>
    
  </channel>
</rss>