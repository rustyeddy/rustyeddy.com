<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Process of Delivering Predictable Software on Rusty Eddy</title>
    <link>http://rustyeddy.com/software/</link>
    <description>Recent content in The Process of Delivering Predictable Software on Rusty Eddy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 05 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://rustyeddy.com/software/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Customer Discovery and MVP</title>
      <link>http://rustyeddy.com/software/customer-discovery-and-mvp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/customer-discovery-and-mvp/</guid>
      <description>This consists of one or more customer discovery sessions, where all users and owners of the software will be interviewed for their expectations, needs and desires from the upcoming software project.
The customer discovery is then turned into user stories, which are then vetted to collect the user stories. Then they are broke down into tasks that are Small, autonmous and measurable.
The test that we come up with must be completed within a day or two.</description>
    </item>
    
    <item>
      <title>Organinizing Software Projects with Kanban</title>
      <link>http://rustyeddy.com/software/kanban/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/kanban/</guid>
      <description>Expect the task list to be ever evolving. During the discovery session and defining the MVP you will begin to identify an initial set of tasks, and as the project precedes additional tasks will be realized.
Whenever and however a new task is identified, that task will be placed on the kanban board in the to do list section.
The item is ordered in the to do list according to its priority amongst the other tasks on the to do list.</description>
    </item>
    
    <item>
      <title>Acceptance Tests</title>
      <link>http://rustyeddy.com/software/notes/acceptance-tests/</link>
      <pubDate>Fri, 02 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/notes/acceptance-tests/</guid>
      <description>One of the first things that ought to be done, but seldom get the attention it needs are the specific criteria that must be met to make the customer/user happy.
We are going to call this group of criteria the projects Acceptance Test. Ideally all acceptance tests can be automated with software, however they may be cases that manual intervention is required to conduct an entire set of Acceptance tests.</description>
    </item>
    
    <item>
      <title>Peer Reviews</title>
      <link>http://rustyeddy.com/software/peer-reviews/</link>
      <pubDate>Tue, 04 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/peer-reviews/</guid>
      <description>The github pull request and peer review.
They are kept with the code!</description>
    </item>
    
    <item>
      <title>Release Process</title>
      <link>http://rustyeddy.com/software/release-process/</link>
      <pubDate>Mon, 03 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/release-process/</guid>
      <description>Once the code has been commited, an action will be taken to compile a latest version of the code into a tarball and hoist upon the release server.</description>
    </item>
    
    <item>
      <title>Tools, Workflow and Github</title>
      <link>http://rustyeddy.com/software/tools-workflow-and-github/</link>
      <pubDate>Fri, 28 May 2021 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/tools-workflow-and-github/</guid>
      <description>Tools and Workflow We are going to start working through a typical light weight workflow. The most important part of any software development workflow is a version control system aka VC or VCS.
Done correctly, your VC will track every change to your source code with clear well written summaries (logs) of the problem that was solved.
Git for Version Control Like a majority of the world today (2021) we will use the version control system (git)[http://git-scm.</description>
    </item>
    
    <item>
      <title>Software is a Team Sport</title>
      <link>http://rustyeddy.com/software/team-sport/</link>
      <pubDate>Tue, 06 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/software/team-sport/</guid>
      <description>Software as a team sport. Like all other teams, it must act as a functional support system. While many teams have a Quaterback or The Driver, There is unquestionably a large number of personnel all built with specific functions to successfully deliver or accomplish the goal of the team.
No difference with software.
Programmers and sometimes management or maybe an architect are the center of attention most of the time, There is a specific need for a diverse set of skills and experiences.</description>
    </item>
    
  </channel>
</rss>