<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My Field Notes on Rusty Eddy</title>
    <link>http://rustyeddy.com/notes/</link>
    <description>Recent content in My Field Notes on Rusty Eddy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 13 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://rustyeddy.com/notes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Streaming Video is Complicated</title>
      <link>http://rustyeddy.com/notes/streaming-video/</link>
      <pubDate>Mon, 29 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video/</guid>
      <description>I need to stream live video from a moving vehical with a connected camera and a possibly connected wifi.
Live High Resolution Video Video will stream from the vehicle to be picked up by video consumers and processed as required. Examples of consumers are Live Video Display on our (Webapp), OpenCV for vision algoritms.
High Demand For Low Resolution It turns out that computer vision alogrithms typically run quite a bit faster on lower resolution images, the additional information from these hi-res images can slow down the type of algorithms we are interested in by many factors.</description>
    </item>
    
    <item>
      <title>Streaming Video Protocols</title>
      <link>http://rustyeddy.com/notes/streaming-video-protocols/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-protocols/</guid>
      <description>RTP ~ Real Time Protocol Actually holds payloads containing arbitrary, but time/delay sensitive media (audio, video, live conversations, etc). Incorporates enough controls to allow for network congestion, reciever compensation and more.
RTSP What it is and How to use it Real Time Streaming Protocol (RTSP)
General consensus says that RTSP is a good choice for low latency, local area networks.
 RTSP good for Local Low Latency, Bad for Internet</description>
    </item>
    
    <item>
      <title>Streaming Video Tools</title>
      <link>http://rustyeddy.com/notes/streaming-video-tools/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-tools/</guid>
      <description>The grandparents of streaming video, and snapshots, read, writing and transcoding video and single frame images are ffmpeg, vlc and gstreamer.
Other platforms, such as the wildly cool and inexpensive Raspberry Pi and attached CSI Camera (Raspberry Pi Camera) have thier own set of utilities: like raspivid. Or the NVidia Nano with it&amp;rsquo;s gst-streamer plugins and nvgst-capture/nvgst-playback utilies.
 This writting is as of March 2019
 VLC less Complex than the Rest, and still in heavy use today.</description>
    </item>
    
    <item>
      <title>Raspberry Pi Camera and Multiple Ports</title>
      <link>http://rustyeddy.com/notes/raspberry-pi-camera-multiple-ports/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/raspberry-pi-camera-multiple-ports/</guid>
      <description>&lt;p&gt;As I started bumbling around trying to figure the best way to stream
[live video from a moving vehicle], I found that the Raspberry Pi
camera is capable of producing filtered versions of the images it is
producing, through &lt;em&gt;video ports&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Streaming Live Video on a Local Lan Vs. Internet</title>
      <link>http://rustyeddy.com/notes/streaming-video-local-network/</link>
      <pubDate>Sun, 23 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/streaming-video-local-network/</guid>
      <description>RTSP is a good option for streaming video in a local setup up, where minimal delay is the highest priority. However, RTSP does not typically do very well over the Internet due to the nature of RTP/UDP.
Which brings up another question: will there be more than once transmitter/reciever per office (which RTSP could serve well).
In recent years people would use RTMP to stream video over the Internet, by adding a plguin to NGINX, each camera would stream to NGINX, NGINX then create the endpoints for the video, waiting for client connections to start recieving the video.</description>
    </item>
    
    <item>
      <title>About MicroServices and Distributed Systems</title>
      <link>http://rustyeddy.com/notes/about-distributed-systems-and-micro-services/</link>
      <pubDate>Sun, 11 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://rustyeddy.com/notes/about-distributed-systems-and-micro-services/</guid>
      <description>I am very much dedicated to building distributed, micro-service style systems. I prefer to piece solutions together based on lean, efficient, best of breed components.
More Complex? Many rightly claim that a distributed system increases the complexity over the monolith, and it is true that communicaiton boundaries must be explicitly created, and that communications between the boundarys becomes a potential for failure, or reduced reliability that tightly couple systems do not have to deal with.</description>
    </item>
    
  </channel>
</rss>