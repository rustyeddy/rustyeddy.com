<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Notes On Software on Rusty Eddy</title>
    <link>http://www.rustyeddy.com/notes/</link>
    <description>Recent content in Notes On Software on Rusty Eddy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 Feb 2001 00:00:00 +0000</lastBuildDate><atom:link href="http://www.rustyeddy.com/notes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Go timers for MQTT testing</title>
      <link>http://www.rustyeddy.com/notes/go-timers-testing-mqtt/</link>
      <pubDate>Mon, 02 May 2022 00:00:00 +0000</pubDate>
      
      <guid>http://www.rustyeddy.com/notes/go-timers-testing-mqtt/</guid>
      <description>This article uses a Go timer and the Go select statement to test our MQTT publish and subscribe in a single simple test statement. A quick note on the go testing package: it is much like the JUnit where tests using a particular naming convention TestXXX(t *testing.T) {} will be run automatically with easy to reports having been generated.
The Problem The following code snippet is directly from the IoTe edge gateway project.</description>
    </item>
    
    <item>
      <title>A Simple Go Configuration</title>
      <link>http://www.rustyeddy.com/notes/go-configuration/</link>
      <pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://www.rustyeddy.com/notes/go-configuration/</guid>
      <description>I use this same configuration structure and supporting functions in most every Go program I work on. It is pretty simple but makes it easy to keep global variables orgranized and configurable.
Here is what I do:
  Create a type config struct
  Every configurable variable for the program becomes a Member field of the Configuration structure.
  Register every field of the Configuration Structure with go&amp;rsquo;s builtin flags package such that the flags are parsed when the program starts we can use our configuration variable.</description>
    </item>
    
  </channel>
</rss>
